name: Non Prod Create Resource Group

on:
  workflow_dispatch:
    inputs:
      description:
        description: Description
        required: true
        type: string
      product:
        description: Product Owner
        required: true
        type: string
      role:
        description: Role
        required: true
        type: string
      counter:
        description: Counter
        required: true
        default: "1"
        type: string
      environment_type:
        description: Environment
        required: true
        type: choice
        options:
        - d
        - t
        - s
        - sb
      location:
          description: Location
          required: true
          type: choice
          default: eastus
          options:
          - eastus
          - westus

permissions:
  id-token: write
  contents: write

env:
  PRODUCT: ${{ github.event.inputs.product }}
  ENVIRONMENT_TYPE: ${{ github.event.inputs.environment_type }}
  LOCATION: ${{ github.event.inputs.location }}
  ROLE: ${{ github.event.inputs.role}}
  COUNTER: ${{ github.event.inputs.counter }}
  DESCRIPTION: ${{ github.event.inputs.description }}
  TERRAFORM_VERSION: ${{ secrets.TERRAFORM_VERSION }}

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}

    - name: Zero Pad
      id: padding
      run: echo "COUNTER=$(printf '%03d' ${{ env.COUNTER }})" >> $GITHUB_ENV

    - name: Zero Padded
      if: ${{ env.COUNTER == '' || env.COUNTER == '000'}}
      run: |
        echo "${{ env.COUNTER }}"
        exit 1

    - name: Set Resource Group Name
      run: echo "RESOURCE_GROUP_NAME=rg-${{ env.ENVIRONMENT_TYPE }}-${{ env.ROLE }}-${{ env.COUNTER }}" >> $GITHUB_ENV

    - name: Stop Running If RG Exists
      run: |
        echo "${{ env.RESOURCE_GROUP_NAME }}"
        result=$(az group exists --name "${{ env.RESOURCE_GROUP_NAME }}") && \
        if [[ $result == "true" || $result == null ]] then \
          echo "Resource group already exists: '${{ env.RESOURCE_GROUP_NAME }}'";
          exit 1;
        fi

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Initialize Terraform
      run: terraform init -upgrade

    - name: Validate Terraform
      run: terraform validate

  plan:
    name: Plan
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Initialize Terraform
      run: terraform init -upgrade

    - name: Plan Terraform
      run: terraform plan \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="location=${{ env.LOCATION }}" \
          -var="environment=${{ env.ENVIRONMENT_TYPE }}" \
          -var="role=${{ env.ROLE }}" \
          -var="counter=${{ env.COUNTER }}" \
          -var="product=${{ env.PRODUCT }}" \
          -var="description=${{ env.DESCRIPTION }}" \
          -var="repository_name=${{ env.REPOSITORY_NAME }}"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: terraform-apply

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set Repository Name
      run: echo "REPOSITORY_NAME=${{ github.repository_owner }}/terraform-rg-${{ env.ROLE }}-${{ env.COUNTER }}" >> $GITHUB_ENV

    - name: Azure login
      uses: azure/login@v2
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Initialize Terraform
      run: terraform init -upgrade

    - name: Apply Terraform
      run: |
        terraform apply -auto-approve \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="location=${{ env.LOCATION }}" \
          -var="environment=${{ env.ENVIRONMENT_TYPE }}" \
          -var="role=${{ env.ROLE }}" \
          -var="counter=${{ env.COUNTER }}" \
          -var="product=${{ env.PRODUCT }}" \
          -var="description=${{ env.DESCRIPTION }}" \
          -var="repository_name=${{ env.REPOSITORY_NAME }}"

