name: "Create Workload Repository"

on:
  workflow_dispatch:
    inputs:
      description:
        description: "Description"
        required: true
        type: string
      role:
        description: "Role"
        required: true
        type: string
      counter:
        description: "Counter"
        required: true
        default: '1'
        type: string

permissions:
  id-token: write
  contents: write

env:
  ROLE: ${{ github.event.inputs.role}}
  COUNTER: ${{ github.event.inputs.counter }}
  DESCRIPTION: ${{ github.event.inputs.description }}

jobs:
  create_workload_repository:
    name: Create Repository
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Zero Pad
        run: echo "COUNTER=$(printf '%03d' ${{ env.COUNTER }})" >> $GITHUB_ENV

      - name: Zero Padded
        if: ${{ env.COUNTER == '' || env.COUNTER == '000'}}
        run: |
          echo "${{ env.COUNTER }}"
          exit 1

      - name: Set Repository Name
        run: echo "REPO_NAME=terraform-rg-${{ env.ROLE }}-${{ env.COUNTER }}" >> $GITHUB_ENV

      - name: GitHub Authorization
        uses: actions/create-github-app-token@v1
        id: app_token
        with:
          app-id: ${{ secrets.PFIKEST_REPOSITORY_MANAGER_ID }}
          private-key: ${{ secrets.PFIKEST_REPOSITORY_MANAGER_SECRET }}
          owner: ${{ github.repository_owner }}

      - name: Create Repository
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ steps.app_token.outputs.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository_owner }}/WorkloadTemplate/generate \
            -d '{"owner":"${{ github.repository_owner }}","name":"${{ env.REPO_NAME }}","description":"${{ env.DESCRIPTION }}","include_all_branches":true,"private":false}' > results.json && \
          export REPO_URL=$(jq '.html_url' results.json)
          if [[ REPO_URL == "" || REPO_URL == null ]] then
            echo "Failed to create ${{ env.REPO_NAME }}";
            exit 1;
          fi
          echo "Created: ${REPO_URL}"

      - name:
        run: |
          curl \
            -X PUT \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: ${{ steps.app_token.outputs.token }}" \
            https://api.github.com/orgs/${{ github.repository_owner }}/teams/RepoCreate/repos/${{ github.repository_owner }}/${{ env.repository_owner }}
          echo "RepoCreate Team Added"