name: "Create Resource Group"

on:
  workflow_dispatch: 
    inputs:
      subscription:
        description: Subscription
        required: true
        type: choice
        options:
        - "AzureSubscription1"
      repository_name:
        description: "Repository Name"
        required: true
        type: string
      environment_type:
        description: "Environment"
        required: true
        type: choice
        options:
        - "d"
        - "t"
        - "s"
        - "np"
        - "p"
        - "dr"
      role:
        description: "Role"
        required: true
        type: string
      location:
          description: "Location"
          required: true
          type: choice
          default: eastus
          options:
          - eastus
          - westus
      counter:
        description: "Counter"
        required: true
        default: '1'
        type: string        
      description:
        description: "Description"
        required: true
        type: string

permissions:
  id-token: write
  contents: write

env:
  SUBSCRIPTION: ${{ github.event.inputs.subscription }}
  ENVIRONMENT_TYPE: ${{ github.event.inputs.environment_type }}
  LOCATION: ${{ github.event.inputs.location }}
  ROLE: ${{ github.event.inputs.role}}
  COUNTER: ${{ github.event.inputs.counter }}
  DESCRIPTION: ${{ github.event.inputs.description }}
  TERRAFORM_VERSION: ${{ secrets.TERRAFORM_VERSION }}
  ARM_USE_MSI: true
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: $${{ secrets.AZURE_CLIENT_ID }}

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Azure login
      uses: azure/login@v2
      with:
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}

    - name: Zero Pad
      id: padding
      run: echo "COUNTER=$(printf '%03d' ${{ env.COUNTER }})" >> $GITHUB_ENV
    
    - name: Zero Padded
      if: ${{ env.COUNTER == '' || env.COUNTER == '000'}}
      run: |
        echo "${{ env.COUNTER }}"
        exit 1
    
    - name: Set Resource Group Name
      run: echo "RESOURCE_GROUP_NAME=rg-${{ env.ENVIRONMENT_TYPE }}-${{ env.ROLE }}-${{ env.COUNTER }}" >> $GITHUB_ENV

    - name: Stop Running If RG Exists
      run: |
        echo "${{ env.RESOURCE_GROUP_NAME }}"
        result=$(az group exists --name "${{ env.RESOURCE_GROUP_NAME }}") && \
        if [[ $result == "true" || $result == null ]] then \
          echo "Resource group already exists: '${{ env.RESOURCE_GROUP_NAME }}'"; 
          exit 1; 
        fi
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Initialize Terraform
      run: terraform init -upgrade
    
    - name: Validate Terraform
      run: terraform validate
      
  plan:
    name: Plan
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - name: Plan Terraform
      run: terraform plan -out tfplan
    
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: plan
      
    steps:
      - name: Plan Terraform
        run: terraform apply tfplan
    
  
  # create_workload_repository:
  #   name: Create Repository
  #   runs-on: ubuntu-latest

  #   outputs:
  #     repository-url: ${{ steps.create_repo.outputs.REPO_URL }}

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Zero Pad
  #       run: echo "PADDED_COUNTER=$(printf '%03d' ${{ env.COUNTER }})" >> $GITHUB_ENV

  #     - name: GitHub Authorization
  #       uses: actions/create-github-app-token@v1
  #       id: app_token
  #       with: 
  #         app-id: ${{ secrets.PFIKEST_REPOSITORY_MANAGER_ID }}
  #         private-key: ${{ secrets.PFIKEST_REPOSITORY_MANAGER_SECRET }}
  #         owner: ${{ github.repository_owner }}
        
  #     - name: Create Repository
  #       if: ${{ env.PADDED_COUNTER != '' && env.PADDED_COUNTER != '000'}}
  #       id: create_repo
  #       run: |
  #         curl -L \
  #           -X POST \
  #           -H "Accept: application/vnd.github+json" \
  #           -H "Authorization: Bearer ${{ steps.app_token.outputs.token }}" \
  #           -H "X-GitHub-Api-Version: 2022-11-28" \
  #           https://api.github.com/repos/PfikestInt/WorkloadTemplate/generate \
  #           -d '{"owner":"PfikestInt","name":"rg-${{ env.ROLE }}-${{ env.PADDED_COUNTER }}","description":"${{ env.DESCRIPTION }}","include_all_branches":true,"private":false}' > results.json && \
  #         export REPO_URL=$(jq '.html_url' results.json)
  #         echo "Created: ${REPO_URL}"
